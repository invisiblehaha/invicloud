<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.vision.invicloud.support.mapper.ProductMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.vision.invicloud.support.entity.Product">
        <id column="product_id" property="productId" />
        <result column="product_name" property="productName" />
        <result column="product_price" property="productPrice" />
        <result column="product_introduce" property="productIntroduce" />
        <result column="stock" property="stock" />
        <result column="status" property="status" />
        <result column="pic_img" property="picImg" />
        <result column="remarks" property="remarks" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    <resultMap id="SingAnalyMap" type="cn.vision.invicloud.support.pojo.vo.SingProductAnalyVO">
        <result column="create_time" property="createTime"/>
        <result column="buy_amount" property="buyAmount"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        product_id AS productId, product_name AS productName, product_price AS productPrice,product_introduce AS productIntroduce,stock,status,pic_img AS picImg,remarks, create_time AS createTime, update_time AS updateTime
    </sql>

    <!-- 根据商品Id查找商品 -->
    <select id="getById" resultType="cn.vision.invicloud.support.pojo.vo.ProductVO">
        SELECT
            product_id AS productId,
            product_name AS productName,
            product_price AS productPrice,
            product_introduce AS productIntroduce,
            stock AS stock,
            pic_img AS picImg,
            remarks AS remarks
        FROM
            crm_product
            WHERE
            product_id=#{productId}
    </select>



<insert id="insertInto">
   INSERT INTO crm_product
     ( product_name,
       product_price ,
       stock)
       VALUES
        (#{productName},
         #{productPrice},
         #{stock})
</insert>



    <!-- 动态删除操作  delete from product where id in(?,?,?);-->
    <delete id="deleteByProductId">
        delete from crm_product
        where
      product_id =  #{productId}
    </delete>



    <!-- 根据分页信息/搜索内容查找日志记录列表 -->
    <select id="list" resultType="cn.vision.invicloud.support.entity.Product">
        SELECT
        <include refid="Base_Column_List" />
        FROM
        crm_product
        WHERE
        1=1
        <if test="search != null">
            AND (
            product_name LIKE '%' #{search} '%'
            )
        </if>
        <if test="pageInfo.sort != null">
            ORDER BY ${pageInfo.sort} ${pageInfo.order}
        </if>
    </select>

    <!-- 获取所有商品 -->
    <select id="getAllProduct" resultType="cn.vision.invicloud.support.pojo.vo.ProductVO">
    SELECT
    product_id AS productId,
    product_name AS productName,
    product_price AS productPrice,
    product_introduce AS productIntroduce,
    stock,
    pic_img AS picImg,
    remarks
    FROM
    crm_product
    </select>

    <select id="analySing" resultMap="SingAnalyMap">
       SELECT
	t.create_time,
	SUM( t.buy_amount ) as buy_amount
FROM
	(
	SELECT
		str_to_date( substr( s.create_time, 1, 10 ), '%Y-%m-%d %h:%i:%s' ) AS create_time,
		SUM( s.buy_amount ) AS buy_amount
	FROM
		(
		SELECT
			o.create_time,
			p.buy_amount
		FROM
			crm_order o,
			crm_order_product p
		WHERE
			o.order_id = p.order_id
			AND p.product_id = 2
		ORDER BY
			p.product_id,
			o.create_time ASC
		) s
	GROUP BY
		s.create_time ASC
	) t
GROUP BY
	t.create_time
    </select>






       <select id="getProductBySearch" resultType="cn.vision.invicloud.support.pojo.vo.ProductVO">
        SELECT
        <include refid="Base_Column_List" />
        FROM
        crm_product
        WHERE
        1=1
        <if test="search != null">
            AND (
            product_name LIKE '%' #{search} '%'
            )
        </if>
    </select>
</mapper>
